<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.study.dev_mook.mapper.BoardMapper">
	
	<insert id="create" parameterType="kr.study.dev_mook.model.BoardVO">
		INSERT INTO tbl_board (
			title, content, writer
		) VALUES (
			#{title}, #{content}, #{writer}
		)
	</insert>
	
	<select id="read" parameterType="int" resultType="kr.study.dev_mook.model.BoardVO">
		SELECT
			bno, title, content, writer, regdate, viewcnt, replycnt
		FROM
			tbl_board
		WHERE
			bno = #{bno}
	</select>
	
	<update id="update" parameterType="kr.study.dev_mook.model.BoardVO">
		UPDATE
			tbl_board
		SET
			title = #{title},
			content = #{content}
		WHERE
			bno = #{bno}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM
			tbl_board
		WHERE
			bno = #{bno}
	</delete>
	
	<select id="listAll" resultType="kr.study.dev_mook.model.BoardVO">
		<![CDATA[
			SELECT
				bno, title, content, writer, regdate, viewcnt
			FROM
				tbl_board
			WHERE
				bno > 0
			ORDER BY
				bno DESC, regdate DESC
		]]>
	</select>
	
	<!-- typeAliases 적용: 패키지명 생략 -->
	<select id="listPage" resultType="BoardVO">
		<![CDATA[
			SELECT
				bno, title, content, writer, regdate, viewcnt
			FROM
				tbl_board
			WHERE
				bno > 0
			ORDER BY
				bno DESC, regdate DESC
			LIMIT
				#{page}, ${perPageNum}
		]]>
	</select>
	
	<select id="listCriteria" resultType="BoardVO">
		<![CDATA[
			SELECT
				bno, title, content, writer, regdate, viewcnt, replycnt
			FROM
				tbl_board
			WHERE
				bno > 0
			ORDER BY
				bno DESC, regdate DESC
			LIMIT
				#{pageStart}, ${perPageNum}
		]]>
	</select>
	
	<select id="countPaging" resultType="int">
		<![CDATA[
			SELECT
				COUNT(bno)
			FROM
				tbl_board
			WHERE
				bno > 0
		]]>
	</select>
	
	<!-- 검색을 통한 목록 조회 Dynamic Query -->
	<select id="listSearch" resultType="BoardVO">
		<![CDATA[
			SELECT
				*
			FROM
				tbl_board
			WHERE
				bno > 0
		]]>
		
		<!-- Where 조건만 별도 쿼리로 작성한 후 가져다 쓰기 -->
		<include refid="searchWhere"></include>
		
		<![CDATA[
			ORDER BY
				bno DESC
			LIMIT
				#{pageStart}, ${perPageNum}
		]]>
	</select>
	
	<!-- 검색을 통한 게시글 갯수 조회 Dynamic Query -->
	<select id="listSearchCount" resultType="int">
		<![CDATA[
			SELECT
				COUNT(bno)
			FROM
				tbl_board
			WHERE
				bno > 0
		]]>
		
		<!-- Where 조건만 별도 쿼리로 작성한 후 가져다 쓰기 -->
		<include refid="searchWhere"></include>
	</select>
	
	<update id="updateReplyCnt">
		UPDATE
			tbl_board
		SET
			replycnt = replycnt + #{amount}
		WHERE
			bno = #{bno}
	</update>
	
	<update id="updateViewCnt">
		UPDATE
			tbl_board
		SET
			viewcnt = viewcnt + 1
		WHERE
			bno = #{bno}
	</update>
	
	<insert id="addAttach">
		INSERT INTO tbl_attach(fullName, bno) values(#{fullName}, LAST_INSERT_ID())
	</insert>
	
	<select id="getAttach" resultType="string">
		SELECT
			fullName
		FROM
			tbl_attach
		WHERE
			bno = #{bno}
		ORDER BY
			regdate
	</select>
	
	<delete id="deleteAttach">
		delete fron tbl_attach where bno = #{bno}
	</delete>
	
	<insert id="replaceAttach">
		insert into tbl_attach(fullName, bno) values(#{fullName}, #{bno})
	</insert>
	
	<!-- Where 조건만 별도 쿼리로 작성 -->
	<sql id="searchWhere">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND title like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				AND content like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'w'.toString()">
				AND writer like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				AND ( title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%', #{keyword}, '%') )
			</if>
			<if test="searchType == 'cw'.toString()">
				AND ( content like CONCAT('%', #{keyword}, '%') OR writer like CONCAT('%', #{keyword}, '%') )
			</if>
			<if test="searchType == 'tcw'.toString()">
				AND ( 
					title like CONCAT('%', #{keyword}, '%')
					OR content like CONCAT('%', #{keyword}, '%') 
					OR writer like CONCAT('%', #{keyword}, '%') 
				)
			</if>
		</if>
	</sql>
</mapper>